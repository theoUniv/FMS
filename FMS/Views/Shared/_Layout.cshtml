<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FMS</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/FMS.styles.css" asp-append-version="true" />

    <!-- Toastr CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
</head>

<body>
<header>
    <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">FMS</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">🏠 Accueil</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Langages">📜 Langages GitHub</a>
                    </li>
                </ul>

                <!-- Afficher si l'utilisateur est authentifié -->
                <ul class="navbar-nav ms-auto d-flex align-items-center" id="authLinks">
                    <!-- Afficher le nom de l'utilisateur à gauche du bouton de déconnexion -->
                    <li class="nav-item d-none" id="userProfileItem">
                        <span id="username_account" class="nav-link text-dark me-3">Utilisateur</span>
                    </li>
                    <!-- Afficher le bouton de déconnexion -->
                    <li class="nav-item d-none" id="logoutItem">
                        <button class="btn btn-danger" id="logoutButton">Déconnexion</button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>

<div class="container">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        &copy; 2025 - FMS - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
</footer>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Bootstrap JS -->
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<!-- Toastr JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<!-- VueJS -->
<script src="https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js"></script>

<!-- Configuration de Toastr -->
<script>
    toastr.options = {
        "closeButton": true,
        "progressBar": true,
        "positionClass": "toast-top-right",
        "preventDuplicates": true,
        "timeOut": "5000"
    };

    // Tester un toast de succès
    // setTimeout(function() {
    //     toastr.success("Test de Toastr avec les options définies", "Succès");
    // }, 2000);
</script>

<!-- JavaScript pour la gestion de l'authentification -->
<script>
    // Fonction qui vérifie si l'utilisateur est authentifié et affiche/masque les éléments correspondants
    function checkAuthStatus() {
        const token = localStorage.getItem('token'); // Vérifie si le token existe dans le localStorage

        if (token) {
            // Utilisateur authentifié
            const username = localStorage.getItem('username'); // On suppose que le nom d'utilisateur est aussi stocké

            // Affiche les éléments utilisateur
            document.getElementById('logoutItem').classList.remove('d-none');
            document.getElementById('userProfileItem').classList.remove('d-none');

            // Met à jour le nom d'utilisateur
            document.getElementById('username_account').innerText = username || "Utilisateur";
        } else {
            // Utilisateur non authentifié
            document.getElementById('logoutItem').classList.add('d-none');
            document.getElementById('userProfileItem').classList.add('d-none');
        }
    }

    // Fonction de déconnexion
    function logout() {
        // Retirer le token et autres informations d'authentification
        localStorage.removeItem('token');
        localStorage.removeItem('username');

        // Rediriger vers la page de connexion ou la page d'accueil
        window.location.href = '/Home/LoginPage';
    }

    // Fonction pour récupérer le username via un token JWT
    function getUsername() {
        const token = localStorage.getItem('token'); // Récupérer le token stocké dans le localStorage

        if (token) {
            fetch('/GitHub/GetUserName', {
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token, // Ajouter le token d'authentification
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    const username = data; // Récupérer le nom d'utilisateur
                    document.getElementById('username_account').innerText = username;
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    // Gérer les erreurs, peut-être afficher un message
                });
        }
    }

    // Lancer la vérification d'authentification au chargement de la page
    window.onload = function() {
        checkAuthStatus();
        getUsername();
    };

    // Ajouter l'écouteur d'événements pour le bouton de déconnexion
    document.getElementById('logoutButton')?.addEventListener('click', logout);
</script>

<!-- RenderSection Scripts -->
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
